genday target:
  ./genday.sh {{target}}

fix target:
  @echo 'running cargo fix on {{target}}..'
  cargo fix --lib -p {{target}} --allow-dirty

check target:
  @echo 'running cargo check on {{target}}..'
  cargo check -p {{target}}

run target:
  @echo 'running {{target}}..'
  cargo run --release -p {{target}}

clean:
  @echo 'running cargo clean..'
  cargo clean

bench target *ARGS:
  @echo 'running cargo criterion on {{target}}..'
  mkdir -p benchmark_results
  cargo criterion -p {{target}} --message-format=json -- {{ARGS}} 1>benchmark_results/{{target}}.json

# To get the flamegraph to work, we have to pass in profile-time, and i don't know how to get
# that argument passed in with the above way of running benchmarks to get JSON outputs as well
# So for now, you have to run this to get flamegraphs, and the above `bench` command for JSON
# benchmark results.

benchflame target:
  @echo 'running cargo criterion on {{target}}..'
  mkdir -p benchmark_results
  cargo bench -p {{target}} --bench corebench {{target}} -- --profile-time=5
  #cargo criterion -p {{target}} --message-format=json --profile-time=5 | tee benchmark_results/flame_{{target}}.json

flamegraph target:
  cargo flamegraph --profile release -p {{target}} -o benchmark_results/flame_{{target}}.svg

heapprofile target:
  cargo run --features heapprofile -p {{target}}
  mv dhat-heap.json benchmark_results/dhat_{{target}}.json

profile target: 
  just flamegraph {{target}}
  just bench {{target}}
  just heapprofile {{target}}

watch target:
  cargo watch -x "run -p {{target}}"
